{"ast":null,"code":"var _jsxFileName = \"/Users/zinthida/assignment-by-zin/src/components/Finger/FingerSelector.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AbdomenSelector = ({\n  selectedAbdomen,\n  setSelectedAbdomen\n}) => {\n  const toggleArea = area => {\n    if (area === \"selectAll\") {\n      setSelectedFinger({\n        mcp: true,\n        dip: true,\n        pip: true,\n        selectAll: true\n      });\n    } else {\n      setSelectedFinger(prevState => ({\n        ...prevState,\n        [area]: !prevState[area],\n        // Toggle the selected area\n        selectAll: false\n      }));\n    }\n  };\n  const baseImage = \"/images/default-finger.png\";\n  const fingerAreas = [\"mcp\", \"dip\", \"pip\"];\n  const highlightImages = {\n    finger: {}\n  };\n  const labels = {\n    finger: {}\n  };\n  fingerAreas.forEach(fingerArea => {\n    highlightImages.finger[fingerArea] = `/images/${fingerArea}-highlight.png`;\n    labels.finger[fingerArea] = selectedFinger.selectAll ? \"\" : `/images/${fingerArea}-active.png`;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"justify-center items-center\",\n      src: baseImage,\n      alt: \"default-finger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-[49%]\\tleft-[43.5%] w-20 h-20 cursor-pointer rounded-full\",\n      onClick: () => toggleArea(\"mcp\"),\n      style: {\n        border: \"1px solid red\",\n        opacity: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = AbdomenSelector;\nexport default FingerSelector;\nvar _c;\n$RefreshReg$(_c, \"AbdomenSelector\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AbdomenSelector","selectedAbdomen","setSelectedAbdomen","toggleArea","area","setSelectedFinger","mcp","dip","pip","selectAll","prevState","baseImage","fingerAreas","highlightImages","finger","labels","forEach","fingerArea","selectedFinger","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","border","opacity","_c","FingerSelector","$RefreshReg$"],"sources":["/Users/zinthida/assignment-by-zin/src/components/Finger/FingerSelector.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { FingerState } from \"../../../src/types\";\n\ninterface FingerSelectorProps {\n    selectedFinger: FingerState;\n    setSelectedFinger: React.Dispatch<React.SetStateAction<FingerState>>;\n}\nconst AbdomenSelector: React.FC<AbdomenSelectorProps> = ({\n    selectedAbdomen,\n    setSelectedAbdomen,\n  }) => {\n\n  const toggleArea = (area: keyof FingerState) => {\n    if (area === \"selectAll\") {\n      setSelectedFinger({\n        mcp: true,\n        dip: true,\n        pip: true,\n        selectAll: true,\n      });\n    } else {\n      setSelectedFinger((prevState) => ({\n        ...prevState,\n        [area]: !prevState[area], // Toggle the selected area\n        selectAll: false,\n      }));\n    }\n  };\n  const baseImage = \"/images/default-finger.png\";\n  const fingerAreas = [\"mcp\", \"dip\", \"pip\"];\n  const highlightImages: {\n    finger: { [key: string]: string };\n  } = {\n    finger: {},\n  };\n  const labels: {\n    finger: { [key: string]: string };\n  } = {\n    finger: {},\n  };\n  fingerAreas.forEach((fingerArea) => {\n    highlightImages.finger[fingerArea] = `/images/${fingerArea}-highlight.png`;\n    labels.finger[fingerArea] = selectedFinger.selectAll\n      ? \"\"\n      : `/images/${fingerArea}-active.png`;\n  });\n  return (\n    <div className=\"relative\">\n      <img\n        className=\"justify-center items-center\"\n        src={baseImage}\n        alt=\"default-finger\"\n      />\n      {/* {Object.keys(selectedAbdomen).map((abdomenArea) => (\n        <HighlightedArea\n          key={abdomenArea}\n          isSelected={selectedAbdomen[abdomenArea as keyof AbdomenState]}\n          highlightImage={highlightImages.abdomen[abdomenArea]}\n          labelImage={labels.abdomen?.[abdomenArea]}\n          position={{ top: \"0\", left: \"0\" }} // Customize the position as needed\n          altText={selectedAbdomen.selectAll ? \"\" : abdomenArea}\n        />\n      ))} */}\n      {/* {selectedAbdomen.umbilicus && (\n        <div>\n          <img\n            src={highlightImages[area].umbilicus}\n            alt=\"Umbilicus highlighted\"\n            className=\"absolute\"\n            style={{\n              top: \"0\",\n              left: \"0\",\n            }}\n          />\n          <img\n            src={labels[area].umbilicus}\n            alt=\"Umbilicus label\"\n            className=\"absolute\"\n            style={{\n              top: \"0\",\n              left: \"0\",\n            }}\n          />\n        </div>\n      )}\n      {selectedAbdomen.suprapubic && (\n        <div>\n          <img\n            src={highlightImages[area].suprapubic}\n            alt=\"suprapubic highlighted\"\n            className=\"absolute\"\n            style={{\n              top: \"0\",\n              left: \"0\",\n            }}\n          />\n          <img\n            src={labels[area].suprapubic}\n            alt=\"suprapubic label\"\n            className=\"absolute\"\n            style={{\n              top: \"0\",\n              left: \"0\",\n            }}\n          />\n        </div>\n      )}\n      {selectedAbdomen.ruq && (\n        <div>\n          <img\n            src={highlightImages[area].ruq}\n            alt=\"ruq highlighted\"\n            className=\"absolute\"\n            style={{\n              top: \"0\",\n              left: \"0\",\n            }}\n          />\n          <img\n            src={labels[area].ruq}\n            alt=\"ruq label\"\n            className=\"absolute\"\n            style={{\n              top: \"70px\",\n              left: \"0\",\n            }}\n          />\n        </div>\n      )}\n      {selectedAbdomen.rlq && (\n        <div>\n          <img\n            src={highlightImages[area].rlq}\n            alt=\"rlq highlighted\"\n            className=\"absolute\"\n            style={{\n              top: \"0\",\n              left: \"0\",\n            }}\n          />\n          <img\n            src={labels[area].rlq}\n            alt=\"rlq label\"\n            className=\"absolute\"\n            style={{\n              bottom: \"60px\",\n              left: \"0\",\n            }}\n          />\n        </div>\n      )}\n      {selectedAbdomen.luq && (\n        <div>\n          <img\n            src={highlightImages[area].luq}\n            alt=\"luq highlighted\"\n            className=\"absolute\"\n            style={{\n              top: \"0\",\n              left: \"0\",\n            }}\n          />\n          <img\n            src={labels[area].luq}\n            alt=\"luq label\"\n            className=\"absolute\"\n            style={{\n              top: \"0\",\n              left: \"0\",\n            }}\n          />\n        </div>\n      )}\n      {selectedAbdomen.llq && (\n        <div>\n          <img\n            src={highlightImages[area].llq}\n            alt=\"llq highlighted\"\n            className=\"absolute\"\n            style={{\n              top: \"0\",\n              left: \"0\",\n            }}\n          />\n          <img\n            src={labels[area].llq}\n            alt=\"llq label\"\n            className=\"absolute\"\n            style={{\n              top: \"0\",\n              left: \"0\",\n            }}\n          />\n        </div>\n      )}\n      {selectedAbdomen.epigastrium && (\n        <div>\n          <img\n            src={highlightImages[area].epigastrium}\n            alt=\"epigastrium highlighted\"\n            className=\"absolute\"\n            style={{\n              top: \"0\",\n              left: \"0\",\n            }}\n          />\n          <img\n            src={labels[area].epigastrium}\n            alt=\"epigastrium label\"\n            className=\"absolute\"\n            style={{\n              top: \"0\",\n              left: \"0\",\n            }}\n          />\n        </div>\n      )} */}\n      <div\n        className=\"absolute top-[49%]\tleft-[43.5%] w-20 h-20 cursor-pointer rounded-full\"\n        onClick={() => toggleArea(\"mcp\")}\n        style={{ border: \"1px solid red\", opacity: 0 }}\n      ></div>\n    </div>\n  );\n};\nexport default FingerSelector;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAoB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxC,MAAMC,eAA+C,GAAGA,CAAC;EACrDC,eAAe;EACfC;AACF,CAAC,KAAK;EAEN,MAAMC,UAAU,GAAIC,IAAuB,IAAK;IAC9C,IAAIA,IAAI,KAAK,WAAW,EAAE;MACxBC,iBAAiB,CAAC;QAChBC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,GAAG,EAAE,IAAI;QACTC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,MAAM;MACLJ,iBAAiB,CAAEK,SAAS,KAAM;QAChC,GAAGA,SAAS;QACZ,CAACN,IAAI,GAAG,CAACM,SAAS,CAACN,IAAI,CAAC;QAAE;QAC1BK,SAAS,EAAE;MACb,CAAC,CAAC,CAAC;IACL;EACF,CAAC;EACD,MAAME,SAAS,GAAG,4BAA4B;EAC9C,MAAMC,WAAW,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EACzC,MAAMC,eAEL,GAAG;IACFC,MAAM,EAAE,CAAC;EACX,CAAC;EACD,MAAMC,MAEL,GAAG;IACFD,MAAM,EAAE,CAAC;EACX,CAAC;EACDF,WAAW,CAACI,OAAO,CAAEC,UAAU,IAAK;IAClCJ,eAAe,CAACC,MAAM,CAACG,UAAU,CAAC,GAAG,WAAWA,UAAU,gBAAgB;IAC1EF,MAAM,CAACD,MAAM,CAACG,UAAU,CAAC,GAAGC,cAAc,CAACT,SAAS,GAChD,EAAE,GACF,WAAWQ,UAAU,aAAa;EACxC,CAAC,CAAC;EACF,oBACElB,OAAA;IAAKoB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBrB,OAAA;MACEoB,SAAS,EAAC,6BAA6B;MACvCE,GAAG,EAAEV,SAAU;MACfW,GAAG,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eAqKF3B,OAAA;MACEoB,SAAS,EAAC,wEAAuE;MACjFQ,OAAO,EAAEA,CAAA,KAAMxB,UAAU,CAAC,KAAK,CAAE;MACjCyB,KAAK,EAAE;QAAEC,MAAM,EAAE,eAAe;QAAEC,OAAO,EAAE;MAAE;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACK,EAAA,GAzNI/B,eAA+C;AA0NrD,eAAegC,cAAc;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}